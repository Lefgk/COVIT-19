{"version":3,"sources":["components/Header.js","components/Footer.js","components/Border.js","components/Map/index.js","App.js","index.js"],"names":["Header","id","React","Component","Footer","Border","a","b","this","props","loading","total_confirmed","total_death","tabledata","sort","Comparator","map","value","key","src","alt","Map2","Map","classname","center","lat","lat2","lng","zoom","onClick","getlatlng","TileLayer","attribution","url","arr","numii","CountriesStateData","App","state","country1","flag1","cases1","deaths1","casesPerOneMillion1","deathsPerOneMillion1","InfoAPI","search1","hits","CountriesData","TotalDeaths","TotalCases","Rows","APIresult","total_confirmedS","total_deathS","hasLocation","numi","updateSearch1","bind","getData1","updateValues","getjson","console","log","correctlta","fetch","then","res","json","myJson","setState","country","countryInfo","flag","cases","deaths","casesPerOneMillion","deathsPerOneMillion","features","geometry","coordinates","slice","reduce","previous","current","length","data","push","e","latlng","tempstate","Object","keys","forEach","i","properties","name","event","target","type","placeholder","onChange","width","height","movemap","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33e7d947.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return <div id=\"header\"></div>;\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass Footer extends React.Component {\r\n  render() {\r\n    return <div id=\"footer\"></div>;\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nclass Border extends React.Component {\r\n  Comparator(a, b) {\r\n    if (a[1] < b[1]) return 1;\r\n    if (a[1] > b[1]) return -1;\r\n    return 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"bordertext\">\r\n        <div id=\"borderleft\">\r\n          Cases<br></br>\r\n          <span id=\"box_total_confirmed\">\r\n            {this.props.loading ? null : this.props.total_confirmed}\r\n          </span>\r\n        </div>\r\n\r\n        <div id=\"borderight\">\r\n          Deaths<br></br>\r\n          <span id=\"box_total_deathS\">\r\n            {this.props.loading ? null : this.props.total_death}\r\n          </span>\r\n        </div>\r\n\r\n        {this.props.tabledata.sort(this.Comparator).map((value, key) => (\r\n          <div id=\"itemsinborder\">\r\n            <div id=\"flags\">\r\n              <img src={value[3]} id=\"borderpicture\" alt=\"\"></img>\r\n            </div>\r\n            <div id=\"countrieslist1\">{value[0]}</div>\r\n            <div id=\"countrieslist3\">{value[2]}</div>\r\n            <div id=\"countrieslist2\">{value[1]}</div>\r\n          </div>\r\n        ))}\r\n        <div id=\"rules\"></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Border;\r\n","import React from \"react\";\r\n\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\n\r\nexport default class Map2 extends React.Component {\r\n  render() {\r\n    return (\r\n      <div id=\"mapid\">\r\n        <Map\r\n          classname=\"map\"\r\n          center={[this.props.lat || this.props.lat2, this.props.lng]}\r\n          zoom={this.props.zoom}\r\n          onClick={this.props.getlatlng}\r\n        >\r\n          <TileLayer\r\n            attribution='&copy; <a href=\"https://stadiamaps.com/\">Stadia Maps</a>, &copy; <a href=\"https://openmaptiles.org/\">OpenMapTiles</a> &copy; <a href=\"http://openstreetmap.org\">OpenStreetMap</a> contributors'\r\n            url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth_dark/{z}/{x}/{y}{r}.png\"\r\n          />\r\n        </Map>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Border from \"./components/Border\";\nimport Map2 from \"./components/Map/\";\nimport \"leaflet/dist/leaflet.css\";\nimport CountriesData from \"./components/Map/custom.geo.json\";\nimport \"./components/style.css\";\n\nvar tabledata = [];\nvar total_confirmed = 0;\nvar total_death = 0;\nvar arr = [];\nvar numii = null;\nvar CountriesStateData = [];\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      country1: \"\",\n      flag1: \"\",\n      cases1: null,\n      deaths1: \"\",\n      casesPerOneMillion1: \"\",\n      deathsPerOneMillion1: \"\",\n      InfoAPI: \"\",\n      search1: \"\",\n      hits: [],\n      CountriesData: [],\n      TotalDeaths: \"\",\n      TotalCases: \"\",\n      Rows: [],\n      APIresult: [],\n      total_confirmedS: \"\",\n      total_deathS: \"\",\n      loading: true,\n      lat: 37.98381,\n      lng: 23.727539,\n      hasLocation: false,\n      numi: null,\n      zoom: 3,\n    };\n    this.updateSearch1 = this.updateSearch1.bind(this);\n    this.getData1 = this.getData1.bind(this);\n    this.updateValues = this.updateValues.bind(this);\n    this.getlatlng = this.getlatlng.bind(this);\n  }\n\n  getData1() {\n    this.getjson();\n    console.log(this.state.search1);\n    var correctlta = this.state.search1;\n    fetch(`https://corona.lmao.ninja/v2/countries/${this.state.search1}`)\n      .then(function(res) {\n        return res.json();\n      })\n\n      .then((myJson) =>\n        this.setState({\n          country1: myJson.country,\n          flag1: myJson.countryInfo.flag,\n          cases1: myJson.cases,\n          deaths1: myJson.deaths,\n          casesPerOneMillion1: myJson.casesPerOneMillion,\n          deathsPerOneMillion1: myJson.deathsPerOneMillion,\n          lng: CountriesStateData.features[numii].geometry.coordinates[0][0][0]\n            .slice(0, -1)\n            .reduce(\n              (previous, current) =>\n                (current += previous) /\n                CountriesStateData.features[\n                  numii\n                ].geometry.coordinates[0][0][0].slice(0, -1).length\n            ),\n          lat: CountriesStateData.features[numii].geometry.coordinates[0][0][0]\n            .slice(1, 2)\n            .reduce(\n              (previous, current) =>\n                (current += previous) /\n                CountriesStateData.features[\n                  numii\n                ].geometry.coordinates[0][0][0].slice(1, 2).length\n            ),\n          zoom: 6,\n        })\n      );\n    console.log(`\"lat is\" ${this.state.lat}`);\n    console.log(`\"lng is\" ${this.state.lng}`);\n    console.log(numii);\n    console.log(\n      CountriesStateData.features[numii].geometry.coordinates[0][0][0] ||\n        CountriesStateData.features[numii].geometry.coordinates[0][0]\n    );\n\n    console.log(correctlta);\n    console.log(this.state.lat);\n  }\n\n  componentDidMount() {\n    fetch(`https://corona.lmao.ninja/v2/countries/`)\n      .then(function(res) {\n        return res.json();\n      })\n\n      .then(function(data) {\n        for (let country in data) {\n          tabledata.push([\n            data[country][\"country\"],\n            data[country][\"cases\"],\n            data[country][\"deaths\"],\n            data[country][\"countryInfo\"][\"flag\"],\n          ]);\n\n          total_confirmed += data[country][\"cases\"];\n          total_death += data[country][\"deaths\"];\n        }\n      })\n\n      .then(\n        this.setState({\n          total_confirmedS: total_confirmed,\n          total_deathS: total_death,\n        })\n      )\n      .then(this.updateValues);\n  }\n\n  updateValues() {\n    this.setState({\n      total_confirmedS: total_confirmed,\n      total_deathS: total_death,\n      loading: false,\n    });\n  }\n\n  getlatlng(e) {\n    this.setState({\n      lat: e.latlng.lat,\n      lng: e.latlng.lng,\n    });\n  }\n\n  getjson() {\n    var tempstate = this.state.search1;\n\n    Object.keys(CountriesData).forEach(function(key) {\n      arr.push(CountriesData[key]);\n      CountriesStateData = CountriesData;\n      for (var i = 0; i < CountriesData[key].length; i++) {\n        if (CountriesData.features[i].properties.name === tempstate) {\n          numii = i;\n        }\n      }\n    });\n  }\n\n  updateSearch1(event) {\n    this.setState({\n      search1: event.target.value,\n    });\n  }\n\n  render() {\n    const {\n      country1,\n      deaths1,\n      flag1,\n      cases1,\n      casesPerOneMillion1,\n      deathsPerOneMillion1,\n      loading,\n      lat,\n      lng,\n      zoom,\n    } = this.state;\n\n    if (this.props.search1) {\n    }\n\n    return (\n      <div id=\"central\">\n        <Header />\n        <div id=\"border\">\n          <Border\n            total_confirmed={total_confirmed}\n            total_death={total_death}\n            tabledata={tabledata}\n            loading={loading}\n          />\n        </div>\n        <div id=\"main\">\n          <div id=\"left\">\n            <input\n              id=\"leftinputbutton\"\n              type=\"text\"\n              placeholder=\"Insert your Country\"\n              value={this.props.search1}\n              onChange={this.updateSearch1}\n            />\n            <button id=\"submitbutton\" name=\"submit\" onClick={this.getData1}>\n              Submit\n            </button>\n            <br></br>\n            <img src={flag1} id=\"picture\" alt=\"\"></img>\n            <div id=\"mainleft\">\n              <br></br>\n              Country : {country1}\n              <br></br>\n              Cases : {cases1}\n              <br></br>\n              Deaths : {deaths1}\n              <br></br>\n              Cases per mil :{casesPerOneMillion1}\n              <br></br>\n              Deaths per mil :{deathsPerOneMillion1}\n            </div>\n          </div>\n          <Map2\n            width=\"640px\"\n            height=\"720px\"\n            id=\"map\"\n            lat={lat}\n            lng={lng}\n            zoom={zoom}\n            onClick={this.movemap}\n            getlatlng={this.getlatlng}\n          />\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"leaflet/dist/leaflet.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}